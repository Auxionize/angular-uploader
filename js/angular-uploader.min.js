/*! angular-uploader - v0.1.0 (https://github.com/Auxionize/angular-uploader#readme) */
!function(){"use strict";angular.module("ui.angular-uploader",["ngFileUpload","ui.bootstrap"]).filter("bytes",function(){return function(a,b){if(isNaN(parseFloat(a))||!isFinite(a))return"-";void 0===b&&(b=1);var c=["bytes","kb","MB","GB","TB","PB"],d=Math.floor(Math.log(a)/Math.log(1024));return(a/Math.pow(1024,Math.floor(d))).toFixed(b)+" "+c[d]}}).directive("angularUploader",function(){return{scope:{btnText:"<",btnClass:"<?",uploadUrl:"<",downloadUrl:"<",deleteUrl:"<",readOnly:"<",multiple:"<?",maxFileSize:"<?",supported:"<?",initFiles:"<?",onFileUploaded:"=?",onFileRemoved:"=?",onBeforeFileRemoved:"=?",onUploadInit:"=?",onUploadEnd:"=?",debug:"<?"},template:'\t\t\t<form name="myForm"> \t\t\t\t<div \t\t\t\t\tng-if="file.isVisible" \t\t\t\t\tclass="upload-element animated" \t\t\t\t\tng-class="{zoomOut: file.animated}" \t\t\t\t\trole="alert" \t\t\t\t\tng-repeat="(key, file) in files"> \t\t\t\t\t<a \t\t\t\t\t\tclass="file-link" \t\t\t\t\t\tng-if="file.done" \t\t\t\t\t\thref="{{file.downloadUrl}}" \t\t\t\t\t\ttitle="{{file.data.name}}" \t\t\t\t\t\ttarget="_self"> \t\t\t\t\t\t<div class="link-name">{{file.data.name}}</div> \t\t\t\t\t\t<div class="link-size">{{file.data.size | bytes}}</div> \t\t\t\t\t</a> \t\t\t\t\t<i \t\t\t\t\t\tng-if="!readOnly && file.done" \t\t\t\t\t\tng-click="unload($index, file)" \t\t\t\t\t\tclass="glyphicon glyphicon-remove link-remove"> \t\t\t\t\t</i> \t\t\t\t\t<div class="file-holder" ng-if="!file.done"> \t\t\t\t\t\t<div class="filename" title="{{file.data.name}}">{{file.data.name}}</div> \t\t\t\t\t\t<span class="link-size">({{file.data.size | bytes}})</span> \t\t\t\t\t</div> \t\t\t\t\t<div ng-if="!file.done" class="tool-holder"> \t\t\t\t\t\t<i \t\t\t\t\t\t\tng-click="unload($index, file)" \t\t\t\t\t\t\tclass="glyphicon glyphicon-remove link-internal"> \t\t\t\t\t\t</i> \t\t\t\t\t\t<div class="progress">\t\t\t\t\t\t\t <div class="progress-bar" role="progressbar" aria-valuenow="file.progress" aria-valuemin="0" aria-valuemax="100" style="width: {{file.progress}}%;">\t\t\t\t\t\t\t </div>\t\t\t\t\t\t</div>\t\t\t\t\t</div> \t\t\t\t</div> \t\t\t\t\t<div ng-repeat="errFile in invalidFiles" class="alert alert-danger" role="alert"> \t\t\t\t\t<button type="button" class="close" data-dismiss="alert" aria-label="Close"> \t\t\t\t\t<span aria-hidden="true">&times;</span> \t\t\t\t</button> \t\t\t\tError uploading: \'{{errFile.name}}\'({{errFile.size | bytes}}) {{errFile.$error}} {{errFile.$errorParam}} \t\t\t\t</div> \t\t\t\t<button \t\t\t\t\t\t\t\t\t\tclass="btn btn-default" \t\t\t\t\tng-class="btnClass" \t\t\t\t\tng-if="showUploadBtn && !readOnly" \t\t\t\t\tng-disabled="uploadInProgress" \t\t\t\t\tngf-max-size="maxFileSize" \t\t\t\t\tngf-pattern="supported"\t\t\t\t\tngf-model-invalid="errorFile" \t\t\t\t\tngf-select="load($files, $invalidFiles)" \t\t\t\t\tngf-multiple="multiple"> \t\t\t\t\t<i class="glyphicon glyphicon-paperclip"></i> \t\t\t\t\t<span translate>{{btnText}}</span> \t\t\t\t</button> \t\t\t</form>',controller:a}});var a=["$scope","$timeout","$http","Upload",function(a,b,c,d){var e=["!.exe"],f={btnText:"Attach file(s)",initFiles:[],multiple:!1,maxFileSize:"5MB",supported:e.join(),debug:!1};a.files=[],a.invalidFiles=[],a.btnText=angular.isDefined(a.btnText)?a.btnText:f.btnText,a.btnClass=angular.isDefined(a.btnClass)?a.btnClass:["btn-default"],a.initFiles=angular.isDefined(a.initFiles)?a.initFiles:f.initFiles,a.multiple=angular.isDefined(a.multiple)?a.multiple:f.multiple,a.maxFileSize=angular.isDefined(a.maxFileSize)?a.maxFileSize:f.maxFileSize,a.supported=angular.isDefined(a.supported)?a.supported:f.supported,a.debug=a.debug=angular.isDefined(a.debug)?a.debug:f.debug,a.showUploadBtn=!0,a.localGroupFiles=0,a.localGroupUploadedFiles=0,a.uploadInProgress=!1,a.$on("uploader:resetFiles",function(){a.files=[]});var g=function(b,c){b.data=c,b.done=!0,b.progress=100,b.isVisible=!0,b.downloadUrl=a.downloadUrl.replace(":id",b.data.uuid)},h=function(){a.showUploadBtn=!(a.multiple===!1&&a.files.length>0)},i=function(b,c){a.files=[];var d=angular.isUndefined(c)?b:c;d&&d.length>0&&(angular.forEach(d,function(b){var c={};g(c,b),a.files.push(c)}),h())};a.$watch("initFiles",i),a.load=function(b,c){if(!angular.isUndefined(b)){a.localGroupFiles=b.length;var e=(new Date).getTime();angular.isFunction(a.onUploadInit)&&a.localGroupFiles>0&&(a.uploadInProgress=!0,a.onUploadInit()),a.invalidFiles=c,angular.forEach(b,function(b,f){var i=new Date(e++);a.files.push(b),b.data={date:i,name:b.name,size:b.size},b.done=!1,b.isVisible=!0,b.animated=!1,b.progress=0,b.upload=d.upload({url:a.uploadUrl,method:"POST",file:b}).progress(function(a){a.loaded!==a.total&&(b.progress=parseInt(100*a.loaded/a.total,10))}).success(function(c){g(b,c),h(),a.$emit("file:uploaded",b.data),angular.isFunction(a.onFileUploaded)&&a.onFileUploaded(b.data),angular.isFunction(a.onUploadEnd)&&(a.localGroupUploadedFiles++,a.localGroupFiles===a.localGroupUploadedFiles&&(a.uploadInProgress=!1,a.localGroupFiles=a.localGroupUploadedFiles=0,a.onUploadEnd()))}).error(function(d,e){if(e>0){a.removeElement(f,b);var g={name:b.name,size:b.size,$error:d};angular.isArray(c)?c.push(g):c=[g]}})})}},a.removeElement=function(c,d){d.animated=!0,b(function(){a.$emit("file:removed",{file:d.data}),angular.isFunction(a.onFileRemoved)&&a.onFileRemoved(d.data),angular.isFunction(a.onUploadEnd)&&--a.localGroupFiles===a.localGroupUploadedFiles&&(a.uploadInProgress=!1,a.localGroupFiles=a.localGroupUploadedFiles=0,a.onUploadEnd()),d.isVisible=!1,a.files.splice(c,1),h()},600)},a.unload=function(b,c){c.done?angular.isFunction(a.onBeforeFileRemoved)?a.onBeforeFileRemoved(b,c,a.removeData):a.removeData(b,c):(c.upload.abort(),a.removeElement(b,c))},a.removeData=function(b,d){c.delete(a.deleteUrl.replace(":id",d.data.linkId)).success(function(){a.removeElement(b,d)})}}]}();