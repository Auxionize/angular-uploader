/*! angular-uploader - v0.1.0 (https://github.com/Auxionize/angular-uploader#readme) */
!function(){"use strict";angular.module("ui.angular-uploader",["ngFileUpload","ui.bootstrap"]).directive("angularUploader",function(){var b='			<form name="myForm"> 				<div 					ng-if="file.isVisible" 					class="upload-element animated" 					ng-class="{zoomOut: file.animated}" 					role="alert" 					ng-repeat="(key, file) in vm.files"> 				<a 					class="file-link" 					ng-if="file.done" 					href="{{file.downloadUrl}}" 					target="_self"> 					<div class="link-name">{{file.data.name}}</div> 					<div class="link-size">({{file.data.size | bytes}})</div> 				</a> 				<div class="filename" ng-if="!file.done">{{file.data.name}}</div> 				<span class="link-size" ng-if="!file.done">({{file.data.size | bytes}})</span> 				<div ng-if="!file.done" class="tool-holder"> 					<i 						ng-click="vm.unload($index, file)" 						class="glyphicon glyphicon-remove link-internal"> 					</i> 					<uib-progressbar 						max="100" 						value="file.progress"> 					</uib-progressbar> 					</div> 					<i 						ng-if="file.done" 						ng-click="vm.unload($index, file)" 						class="glyphicon glyphicon-remove link-remove"> 					</i> 					</div> 					<div ng-repeat="errFile in vm.invalidFiles" class="alert alert-danger" role="alert"> 					<button type="button" class="close" data-dismiss="alert" aria-label="Close"> 					<span aria-hidden="true">&times;</span> 				</button> 				Error uploading: \'{{errFile.name}}\'({{errFile.size | bytes}}) {{errFile.$error}} {{errFile.$errorParam}} 				</div> 				<button 					class="btn btn-default" 					ng-if="vm.showUploadBtn" 					ngf-max-size="vm.maxFileSize" 					ngf-model-invalid="errorFile" 					ngf-select="vm.load($files, $invalidFiles)" 					ngf-multiple="vm.multiple"> 					<i class="glyphicon glyphicon-paperclip"></i> 					<span ng-if="vm.multiple">Attach Files</span> 					<span ng-if="!vm.multiple">Attach File</span> 				</button> 			</form>';return{scope:{uploadUrl:"<",downloadUrl:"<",multiple:"<?",maxFileSize:"<?",initFiles:"<?",debug:"<?"},template:b,controller:a,controllerAs:"vm"}});var a=["$scope","$timeout","Upload",function(a,b,c){var d=this;if(d.files=a.initFiles=angular.isDefined(a.initFiles)?a.initFiles:[],d.invalidFiles=[],d.uploadUrl=a.uploadUrl,d.downloadUrl=a.downloadUrl,d.multiple=a.multiple=angular.isDefined(a.multiple)?a.multiple:!1,d.maxFileSize=a.maxFileSize=angular.isDefined(a.maxFileSize)?a.maxFileSize:"2GB",d.showUploadBtn=!0,d.debug=a.debug=angular.isDefined(a.debug)?a.debug:!1,d.debug){var e=["multiple","uploadUrl","downloadUrl","maxFileSize"];a.$watchGroup(e,function(b){d.multiple=a.$eval(a.multiple),d.uploadUrl=b[1],d.downloadUrl=b[2],d.maxFileSize=b[3]})}d.load=function(a,b){var e=(new Date).getTime();d.files=d.files.concat(a),d.invalidFiles=b,angular.forEach(a,function(a){var b=new Date(e++);a.data={date:b,name:a.name,size:a.size},a.done=!1,a.isVisible=!0,a.animated=!1,a.progress=0,a.upload=c.upload({url:d.uploadUrl,method:"POST",file:a}).progress(function(b){a.progress=parseInt(100*b.loaded/b.total,10)}).success(function(b){a.data=b[0],a.done=!0,a.progress=100,a.downloadUrl=d.downloadUrl.replace(":id",a.data.uuid)}).error(function(a,b){b>0&&console.error(a)})}),d.showUploadBtn=!(d.multiple===!1&&a.length>0)},d.unload=function(a,c){c.done||c.upload.abort(),c.animated=!0,b(function(){c.isVisible=!1,d.files.splice(a,1),d.showUploadBtn=!(d.multiple===!1&&d.files.length>0)},600)}}]}();