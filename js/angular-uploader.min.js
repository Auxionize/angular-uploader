/*! angular-uploader - v0.1.0 (https://github.com/Auxionize/angular-uploader#readme) */
!function(){"use strict";angular.module("ui.angular-uploader",["ngFileUpload","ui.bootstrap"]).filter("bytes",function(){return function(a,b){if(isNaN(parseFloat(a))||!isFinite(a))return"-";"undefined"==typeof b&&(b=1);var c=["bytes","kb","MB","GB","TB","PB"],d=Math.floor(Math.log(a)/Math.log(1024));return(a/Math.pow(1024,Math.floor(d))).toFixed(b)+" "+c[d]}}).directive("angularUploader",function(){var b='			<form name="myForm"> 				<div 					ng-if="file.isVisible" 					class="upload-element animated" 					ng-class="{zoomOut: file.animated}" 					role="alert" 					ng-repeat="(key, file) in files"> 					<a 						class="file-link" 						ng-if="file.done" 						href="{{file.downloadUrl}}" 						title="{{file.data.name}}" 						target="_self"> 						<div class="link-name">{{file.data.name}}</div> 						<div class="link-size">{{file.data.size | bytes}}</div> 					</a> 					<i 						ng-if="!readOnly && file.done" 						ng-click="unload($index, file)" 						class="glyphicon glyphicon-remove link-remove"> 					</i> 					<div class="file-holder" ng-if="!file.done"> 						<div class="filename" title="{{file.data.name}}">{{file.data.name}}</div> 						<span class="link-size">({{file.data.size | bytes}})</span> 					</div> 					<div ng-if="!file.done" class="tool-holder"> 						<i 							ng-click="unload($index, file)" 							class="glyphicon glyphicon-remove link-internal"> 						</i> 						<div class="progress">							 <div class="progress-bar" role="progressbar" aria-valuenow="file.progress" aria-valuemin="0" aria-valuemax="100" style="width: {{file.progress}}%;">							 </div>						</div>					</div> 				</div> 					<div ng-repeat="errFile in invalidFiles" class="alert alert-danger" role="alert"> 					<button type="button" class="close" data-dismiss="alert" aria-label="Close"> 					<span aria-hidden="true">&times;</span> 				</button> 				Error uploading: \'{{errFile.name}}\'({{errFile.size | bytes}}) {{errFile.$error}} {{errFile.$errorParam}} 				</div> 				<button 					class="btn btn-default" 					ng-if="showUploadBtn && !readOnly" 					ng-disabled="uploadInProgress" 					ngf-max-size="maxFileSize" 					ngf-model-invalid="errorFile" 					ngf-select="load($files, $invalidFiles)" 					ngf-multiple="multiple"> 					<i class="glyphicon glyphicon-paperclip"></i> 					<span translate>{{btnText}}</span> 				</button> 			</form>';return{scope:{btnText:"<",uploadUrl:"<",downloadUrl:"<",deleteUrl:"<",readOnly:"<",multiple:"<?",maxFileSize:"<?",initFiles:"<?",onFileUploaded:"=?",onFileRemoved:"=?",onUploadInit:"=?",onUploadEnd:"=?",debug:"<?"},template:b,controller:a}});var a=["$scope","$timeout","$http","Upload",function(a,b,c,d){var e={btnText:"Attach file(s)",initFiles:[],multiple:!1,maxFileSize:"5MB",debug:!1};a.files=[],a.invalidFiles=[],a.btnText=angular.isDefined(a.btnText)?a.btnText:e.btnText,a.initFiles=angular.isDefined(a.initFiles)?a.initFiles:e.initFiles,a.multiple=a.multiple=angular.isDefined(a.multiple)?a.multiple:e.multiple,a.maxFileSize=a.maxFileSize=angular.isDefined(a.maxFileSize)?a.maxFileSize:e.maxFileSize,a.debug=a.debug=angular.isDefined(a.debug)?a.debug:e.debug,a.showUploadBtn=!0,a.localGroupFiles=0,a.localGroupUploadedFiles=0,a.uploadInProgress=!1,a.$on("uploader:resetFiles",function(){a.files=[]});var f=function(b,c){b.data=c,b.done=!0,b.progress=100,b.isVisible=!0,b.downloadUrl=a.downloadUrl.replace(":id",b.data.uuid)},g=function(){a.showUploadBtn=!(a.multiple===!1&&a.files.length>0)},h=function(b,c){var d=angular.isUndefined(c)?b:c;d&&d.length>0&&(angular.forEach(d,function(b){var c={};f(c,b),a.files.push(c)}),g())};a.$watch("initFiles",h),a.load=function(b,c){if(!angular.isUndefined(b)){a.localGroupFiles=b.length;var e=(new Date).getTime();angular.isFunction(a.onUploadInit)&&a.localGroupFiles>0&&(a.uploadInProgress=!0,a.onUploadInit()),angular.forEach(b,function(b){a.files.push(b)}),a.invalidFiles=c,angular.forEach(b,function(b,h){var i=new Date(e++);b.data={date:i,name:b.name,size:b.size},b.done=!1,b.isVisible=!0,b.animated=!1,b.progress=0,b.upload=d.upload({url:a.uploadUrl,method:"POST",file:b}).progress(function(a){a.loaded!==a.total&&(b.progress=parseInt(100*a.loaded/a.total,10))}).success(function(c){f(b,c),g(),a.$emit("file:uploaded",b.data),angular.isFunction(a.onFileUploaded)&&a.onFileUploaded(b.data),angular.isFunction(a.onUploadEnd)&&(a.localGroupUploadedFiles++,a.localGroupFiles===a.localGroupUploadedFiles&&(a.uploadInProgress=!1,a.localGroupFiles=a.localGroupUploadedFiles=0,a.onUploadEnd()))}).error(function(d,e){if(e>0){a.removeElement(h,b);var f={name:b.name,size:b.size,$error:d};angular.isArray(c)?c.push(f):c=[f]}})})}},a.removeElement=function(c,d){d.animated=!0,b(function(){a.$emit("file:removed",{file:d.data}),angular.isFunction(a.onFileRemoved)&&a.onFileRemoved(d.data),angular.isFunction(a.onUploadEnd)&&(a.localGroupFiles--,a.localGroupFiles===a.localGroupUploadedFiles&&(a.uploadInProgress=!1,a.localGroupFiles=a.localGroupUploadedFiles=0,a.onUploadEnd())),d.isVisible=!1,a.files.splice(c,1),g()},600)},a.unload=function(b,d){d.done?c["delete"](a.deleteUrl.replace(":id",d.data.linkId)).success(function(){a.removeElement(b,d)}):(d.upload.abort(),a.removeElement(b,d))}}]}();