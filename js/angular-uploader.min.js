/*! angular-uploader - v0.1.0 (https://github.com/Auxionize/angular-uploader#readme) */
!function(){"use strict";angular.module("ui.angular-uploader",["ngFileUpload","ui.bootstrap"]).filter("bytes",function(){return function(a,b){if(isNaN(parseFloat(a))||!isFinite(a))return"-";"undefined"==typeof b&&(b=1);var c=["bytes","kb","MB","GB","TB","PB"],d=Math.floor(Math.log(a)/Math.log(1024));return(a/Math.pow(1024,Math.floor(d))).toFixed(b)+" "+c[d]}}).directive("angularUploader",function(){var b='			<form name="myForm"> 				<div 					ng-if="file.isVisible" 					class="upload-element animated" 					ng-class="{zoomOut: file.animated}" 					role="alert" 					ng-repeat="(key, file) in vm.files"> 					<a 						class="file-link" 						ng-if="file.done" 						href="{{file.downloadUrl}}" 						target="_self"> 						<div class="link-name">{{file.data.name}}</div> 						<div class="link-size">({{file.data.size | bytes}})</div> 					</a> 					<div class="filename" ng-if="!file.done">{{file.data.name}}</div> 					<span class="link-size" ng-if="!file.done">({{file.data.size | bytes}})</span> 					<div ng-if="!file.done" class="tool-holder"> 						<i 							ng-click="vm.unload($index, file)" 							class="glyphicon glyphicon-remove link-internal"> 						</i> 						<uib-progressbar 							max="100" 							value="file.progress"> 						</uib-progressbar> 					</div> 					<i 						ng-if="!vm.readOnly" 						ng-if="file.done" 						ng-click="vm.unload($index, file)" 						class="glyphicon glyphicon-remove link-remove"> 					</i> 				</div> 					<div ng-repeat="errFile in vm.invalidFiles" class="alert alert-danger" role="alert"> 					<button type="button" class="close" data-dismiss="alert" aria-label="Close"> 					<span aria-hidden="true">&times;</span> 				</button> 				Error uploading: \'{{errFile.name}}\'({{errFile.size | bytes}}) {{errFile.$error}} {{errFile.$errorParam}} 				</div> 				<button 					class="btn btn-default" 					ng-if="vm.showUploadBtn && !vm.readOnly" 					ngf-max-size="vm.maxFileSize" 					ngf-model-invalid="errorFile" 					ngf-select="vm.load($files, $invalidFiles)" 					ngf-multiple="vm.multiple"> 					<i class="glyphicon glyphicon-paperclip"></i> 					<span ng-if="vm.multiple">Attach Files</span> 					<span ng-if="!vm.multiple">Attach File</span> 				</button> 			</form>';return{scope:{type:"<",uploadUrl:"<",downloadUrl:"<",deleteUrl:"<",readOnly:"<",multiple:"<?",maxFileSize:"<?",initFiles:"<?",onFileUploaded:"=?",onFileRemoved:"=?",onUploadInit:"=?",onUploadEnd:"=?",debug:"<?"},template:b,controller:a,controllerAs:"vm"}});var a=["$scope","$timeout","$http","Upload",function(a,b,c,d){var e=this;if(e.files=[],e.initFiles=angular.isDefined(a.initFiles)?a.initFiles:[],e.invalidFiles=[],e.type="USER_BUCKET",e.uploadUrl=a.uploadUrl,e.downloadUrl=a.downloadUrl,e.deleteUrl=a.deleteUrl,e.multiple=a.multiple=angular.isDefined(a.multiple)?a.multiple:!1,e.maxFileSize=a.maxFileSize=angular.isDefined(a.maxFileSize)?a.maxFileSize:"2GB",e.readOnly=a.readOnly,e.showUploadBtn=!0,e.debug=a.debug=angular.isDefined(a.debug)?a.debug:!1,e.localGroupFiles=0,e.localGroupUploadedFiles=0,e.debug){var f=["multiple","uploadUrl","downloadUrl","maxFileSize"];a.$watchGroup(f,function(b,c){e.multiple=a.$eval(a.multiple),e.uploadUrl=b[1],e.downloadUrl=b[2],e.maxFileSize=b[3],b[0]!==c[0]&&(e.files=[])})}var g=function(a,b){a.data=b,a.done=!0,a.progress=100,a.isVisible=!0,a.downloadUrl=e.downloadUrl.replace(":id",a.data.uuid)},h=function(){e.showUploadBtn=!(e.multiple===!1&&e.files.length>0)};e.initFiles.length>0&&(angular.forEach(e.initFiles,function(a){var b={};g(b,a),e.files.push(b)}),h()),e.load=function(b,c){e.localGroupFiles=b.length;var f=(new Date).getTime();angular.isFunction(a.onUploadInit)&&a.onUploadInit(),e.files=e.files.concat(b),e.invalidFiles=c,angular.forEach(b,function(b,i){var j=new Date(f++);b.data={date:j,name:b.name,size:b.size},b.done=!1,b.isVisible=!0,b.animated=!1,b.progress=0,b.upload=d.upload({url:e.uploadUrl,method:"POST",file:b}).progress(function(a){a.loaded!==a.total&&(b.progress=parseInt(100*a.loaded/a.total,10))}).success(function(c){g(b,c),h(),a.$emit("file:uploaded",b.data),angular.isFunction(a.onFileUploaded)&&a.onFileUploaded(b.data),angular.isFunction(a.onUploadEnd)&&(e.localGroupUploadedFiles++,e.localGroupFiles===e.localGroupUploadedFiles&&(e.localGroupFiles=e.localGroupUploadedFiles=0,a.onUploadEnd()))}).error(function(a,d){if(d>0){e.removeElement(i,b);var f={name:b.name,size:b.size,$error:a};angular.isArray(c)?c.push(f):c=[f]}})})},e.removeElement=function(c,d){d.animated=!0,b(function(){a.$emit("file:removed",{file:d.data}),angular.isFunction(a.onFileRemoved)&&a.onFileRemoved(d.data),angular.isFunction(a.onUploadEnd)&&(e.localGroupFiles--,e.localGroupFiles===e.localGroupUploadedFiles&&(e.localGroupFiles=e.localGroupUploadedFiles=0,a.onUploadEnd())),d.isVisible=!1,e.files.splice(c,1),h()},600)},e.unload=function(a,b){b.done?c["delete"](e.deleteUrl.replace(":id",b.data.linkId)).success(function(){e.removeElement(a,b)}):(b.upload.abort(),e.removeElement(a,b))}}]}();